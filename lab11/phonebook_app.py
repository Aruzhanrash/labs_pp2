import psycopg2

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
print("üì° –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ë–î...")

conn = psycopg2.connect(
    dbname='phonebook_app',
    user='postgres',
    password='12345',
    host='localhost',
    port='5432'
)

cursor = conn.cursor()

def search_by_pattern():
    pattern = input("–í–≤–µ–¥–∏—Ç–µ —à–∞–±–ª–æ–Ω –¥–ª—è –ø–æ–∏—Å–∫–∞ (—á–∞—Å—Ç—å –∏–º–µ–Ω–∏ –∏–ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–∞): ")
    cursor.execute("SELECT * FROM search_phonebook(%s);", (pattern,))
    results = cursor.fetchall()
    if results:
        for row in results:
            print(f"ID: {row[0]}, –ò–º—è: {row[1]}, –¢–µ–ª–µ—Ñ–æ–Ω: {row[2]}")
    else:
        print("–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")

def insert_or_update():
    name = input("–ò–º—è: ")
    phone = input("–¢–µ–ª–µ—Ñ–æ–Ω: ")
    cursor.execute("CALL insert_or_update_user(%s, %s);", (name, phone))
    conn.commit()
    print("–ó–∞–ø–∏—Å—å –¥–æ–±–∞–≤–ª–µ–Ω–∞ –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∞.")

def insert_many():
    import json
    print("–í—Å—Ç–∞–≤–∫–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
    users = []
    while True:
        name = input("–ò–º—è (–æ—Å—Ç–∞–≤—å –ø—É—Å—Ç—ã–º —á—Ç–æ–±—ã –∑–∞–∫–æ–Ω—á–∏—Ç—å): ")
        if not name:
            break
        phone = input("–¢–µ–ª–µ—Ñ–æ–Ω: ")
        users.append({"name": name, "phone": phone})
    users_json = json.dumps(users)
    cursor.execute("CALL insert_many_users(%s::json);", (users_json,))
    conn.commit()

def paginate():
    limit = int(input("–°–∫–æ–ª—å–∫–æ –∑–∞–ø–∏—Å–µ–π –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å? "))
    offset = int(input("–° –∫–∞–∫–æ–≥–æ —Å–º–µ—â–µ–Ω–∏—è –Ω–∞—á–∞—Ç—å? "))
    cursor.execute("SELECT * FROM get_users_page(%s, %s);", (limit, offset))
    results = cursor.fetchall()
    for row in results:
        print(f"ID: {row[0]}, –ò–º—è: {row[1]}, –¢–µ–ª–µ—Ñ–æ–Ω: {row[2]}")

def delete_user():
    identifier = input("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∏–ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: ")
    cursor.execute("CALL delete_user(%s, NULL);", (identifier,))


    conn.commit()
    print("–£–¥–∞–ª–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ.")

def main():
    while True:
        print("\n--- –ú–ï–ù–Æ ---")
        print("1. –ü–æ–∏—Å–∫ –ø–æ —à–∞–±–ª–æ–Ω—É")
        print("2. –î–æ–±–∞–≤–∏—Ç—å –∏–ª–∏ –æ–±–Ω–æ–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        print("3. –í—Å—Ç–∞–≤–∏—Ç—å –º–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        print("4. –ü–∞–≥–∏–Ω–∞—Ü–∏—è")
        print("5. –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        print("0. –í—ã—Ö–æ–¥")

        choice = input("–í—ã–±–µ—Ä–∏ –ø—É–Ω–∫—Ç: ")

        if choice == '1':
            search_by_pattern()
        elif choice == '2':
            insert_or_update()
        elif choice == '3':
            insert_many()
        elif choice == '4':
            paginate()
        elif choice == '5':
            delete_user()
        elif choice == '0':
            break
        else:
            print("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞.")

    cursor.close()
    conn.close()

if __name__ == "__main__":
    main()
